/*
 * This file is generated by jOOQ.
 */
package cy.jooq.tables.daos;


import cy.jooq.tables.UserInfo;
import cy.jooq.tables.records.UserInfoRecord;

import java.sql.Timestamp;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Repository;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.12.1"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
@Repository
public class UserInfoDao extends DAOImpl<UserInfoRecord, cy.jooq.tables.pojos.UserInfo, String> {

    /**
     * Create a new UserInfoDao without any configuration
     */
    public UserInfoDao() {
        super(UserInfo.USER_INFO, cy.jooq.tables.pojos.UserInfo.class);
    }

    /**
     * Create a new UserInfoDao with an attached configuration
     */
    @Autowired
    public UserInfoDao(Configuration configuration) {
        super(UserInfo.USER_INFO, cy.jooq.tables.pojos.UserInfo.class, configuration);
    }

    @Override
    public String getId(cy.jooq.tables.pojos.UserInfo object) {
        return object.getId();
    }

    /**
     * Fetch records that have <code>id BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<cy.jooq.tables.pojos.UserInfo> fetchRangeOfId(String lowerInclusive, String upperInclusive) {
        return fetchRange(UserInfo.USER_INFO.ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>id IN (values)</code>
     */
    public List<cy.jooq.tables.pojos.UserInfo> fetchById(String... values) {
        return fetch(UserInfo.USER_INFO.ID, values);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public cy.jooq.tables.pojos.UserInfo fetchOneById(String value) {
        return fetchOne(UserInfo.USER_INFO.ID, value);
    }

    /**
     * Fetch records that have <code>username BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<cy.jooq.tables.pojos.UserInfo> fetchRangeOfUsername(String lowerInclusive, String upperInclusive) {
        return fetchRange(UserInfo.USER_INFO.USERNAME, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>username IN (values)</code>
     */
    public List<cy.jooq.tables.pojos.UserInfo> fetchByUsername(String... values) {
        return fetch(UserInfo.USER_INFO.USERNAME, values);
    }

    /**
     * Fetch records that have <code>left_time BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<cy.jooq.tables.pojos.UserInfo> fetchRangeOfLeftTime(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(UserInfo.USER_INFO.LEFT_TIME, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>left_time IN (values)</code>
     */
    public List<cy.jooq.tables.pojos.UserInfo> fetchByLeftTime(Integer... values) {
        return fetch(UserInfo.USER_INFO.LEFT_TIME, values);
    }

    /**
     * Fetch records that have <code>last_use_time BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<cy.jooq.tables.pojos.UserInfo> fetchRangeOfLastUseTime(Timestamp lowerInclusive, Timestamp upperInclusive) {
        return fetchRange(UserInfo.USER_INFO.LAST_USE_TIME, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>last_use_time IN (values)</code>
     */
    public List<cy.jooq.tables.pojos.UserInfo> fetchByLastUseTime(Timestamp... values) {
        return fetch(UserInfo.USER_INFO.LAST_USE_TIME, values);
    }

    /**
     * Fetch records that have <code>bind_qq BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<cy.jooq.tables.pojos.UserInfo> fetchRangeOfBindQq(String lowerInclusive, String upperInclusive) {
        return fetchRange(UserInfo.USER_INFO.BIND_QQ, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>bind_qq IN (values)</code>
     */
    public List<cy.jooq.tables.pojos.UserInfo> fetchByBindQq(String... values) {
        return fetch(UserInfo.USER_INFO.BIND_QQ, values);
    }
}
